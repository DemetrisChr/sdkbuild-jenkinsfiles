
// DO NOT EDIT: this file was generated from Jenkinsfile.signing.erb



pipeline {
    agent none
    stages {
        stage('repos') {
            parallel {

                stage(centos7) {
                    agent { label 'centos7-signing' }
                    steps {
                        cleanWs()
                        copyArtifacts(projectName: 'lcb-lnx-scripted-build-pipeline', selector: upstream(), filter: 'libcouchbase-*centos7*.tar')
                        writeFile(file: "rpmsign-wrapper.expect", text: """
set pkgName [lrange \$argv 0 0]
spawn rpm --addsign -D "_signature gpg" -D "_gpg_name ${GPG_NAME}" \$pkgName
expect -exact "Enter pass phrase: "
send -- "\\r"
expect eof
wait
""")
                        sh("tar xf libcouchbase-*.tar")
                        sh('mkdir -p repo/el7/x86_64')
                        dir('repo') {
                            sh("gpg --export --armor ${GPG_NAME} > couchbase.key")
                            writeFile(file: 'libcouchbase-centos7-x86_64.repo', text: """
[couchbase]
enabled = 1
name = libcouchbase package for centos7 x86_64
baseurl = https://sdk-snapshots.couchbase.com/libcouchbase/repo/el7/x86_64
gpgcheck = 1
gpgkey = https://sdk-snapshots.couchbase.com/libcouchbase/repo/couchbase.key
""")
                        }
                        sh('cp -a libcouchbase-*/*rpm repo/el7/x86_64')
                        sh('for p in repo/el7/x86_64/*.rpm; do expect rpmsign-wrapper.expect \$p; done')
                        sh('createrepo --checksum sha repo/el7/x86_64')
                        sh("gpg --batch --yes --local-user ${GPG_NAME} --detach-sign --armor repo/el7/x86_64/repodata/repomd.xml")
                        sh("rm -rf repo/el7/x86_64@tmp")
                        sh("tar cf repo-${BUILD_NUMBER}-centos7.tar repo")
                        archiveArtifacts(artifacts: "repo-${BUILD_NUMBER}-centos7.tar", fingerprint: true)
                        s3Upload(
                            profileName: 'sdk-jenkins-docs',
                            consoleLogLevel: 'INFO',
                            dontWaitForConcurrentBuildCompletion: false,
                            pluginFailureResultConstraint: 'FAILURE',
                            userMetadata: [],
                            entries: [[
                                selectedRegion: 'us-east-1',
                                bucket: "sdk-snapshots.couchbase.com/libcouchbase",
                                sourceFile: 'repo/'
                            ]]
                        )
                    }
                }


                stage(debian10) {

                    agent { label 'debian10-signing' }
                    steps {
                        cleanWs()
                        copyArtifacts(projectName: 'lcb-lnx-scripted-build-pipeline', selector: upstream(), filter: 'libcouchbase-*buster*.tar')
                        sh('mkdir -p repo/debian10/conf')
                        writeFile(file: "repo/debian10/conf/distributions", text: """
Origin: couchbase
SignWith: ${GPG_NAME}
Suite: buster
Codename: buster
Version: debian10
Components: buster/main
Architectures: amd64 i386
Description: libcouchbase package repository for buster debian10
""")
                        sh("for p in libcouchbase-*.tar; do tar xf \$p; done")
                        dir('repo') {
                            sh("gpg --export --armor ${GPG_NAME} > couchbase.key")
                            writeFile(file: 'libcouchbase-debian10.list', text: """
# curl https://sdk-snapshots.couchbase.com/libcouchbase/repo/couchbase.key | sudo apt-key add -
deb https://sdk-snapshots.couchbase.com/libcouchbase/repo/debian10 buster buster/main
""")
                        }
                        sh("for p in \$(find . -name '*.changes'); do reprepro -T deb --ignore=wrongdistribution -b repo/debian10 include buster \$p; done")
                        sh("tar cf repo-${BUILD_NUMBER}-debian10.tar repo")
                        archiveArtifacts(artifacts: "repo-${BUILD_NUMBER}-debian10.tar", fingerprint: true)
                        s3Upload(
                            profileName: 'sdk-jenkins-docs',
                            consoleLogLevel: 'INFO',
                            dontWaitForConcurrentBuildCompletion: false,
                            pluginFailureResultConstraint: 'FAILURE',
                            userMetadata: [],
                            entries: [[
                                selectedRegion: 'us-east-1',
                                bucket: "sdk-snapshots.couchbase.com/libcouchbase",
                                sourceFile: 'repo/'
                            ]]
                        )
                    }
                }

                stage(ubuntu1804) {

                    agent { label 'debian10-signing' }
                    steps {
                        cleanWs()
                        copyArtifacts(projectName: 'lcb-lnx-scripted-build-pipeline', selector: upstream(), filter: 'libcouchbase-*bionic*.tar')
                        sh('mkdir -p repo/ubuntu1804/conf')
                        writeFile(file: "repo/ubuntu1804/conf/distributions", text: """
Origin: couchbase
SignWith: ${GPG_NAME}
Suite: bionic
Codename: bionic
Version: ubuntu1804
Components: bionic/main
Architectures: amd64 i386
Description: libcouchbase package repository for bionic ubuntu1804
""")
                        sh("for p in libcouchbase-*.tar; do tar xf \$p; done")
                        dir('repo') {
                            sh("gpg --export --armor ${GPG_NAME} > couchbase.key")
                            writeFile(file: 'libcouchbase-ubuntu1804.list', text: """
# curl https://sdk-snapshots.couchbase.com/libcouchbase/repo/couchbase.key | sudo apt-key add -
deb https://sdk-snapshots.couchbase.com/libcouchbase/repo/ubuntu1804 bionic bionic/main
""")
                        }
                        sh("for p in \$(find . -name '*.changes'); do reprepro -T deb --ignore=wrongdistribution -b repo/ubuntu1804 include bionic \$p; done")
                        sh("tar cf repo-${BUILD_NUMBER}-ubuntu1804.tar repo")
                        archiveArtifacts(artifacts: "repo-${BUILD_NUMBER}-ubuntu1804.tar", fingerprint: true)
                        s3Upload(
                            profileName: 'sdk-jenkins-docs',
                            consoleLogLevel: 'INFO',
                            dontWaitForConcurrentBuildCompletion: false,
                            pluginFailureResultConstraint: 'FAILURE',
                            userMetadata: [],
                            entries: [[
                                selectedRegion: 'us-east-1',
                                bucket: "sdk-snapshots.couchbase.com/libcouchbase",
                                sourceFile: 'repo/'
                            ]]
                        )
                    }
                }

                stage(debian9) {

                    agent { label 'debian10-signing' }
                    steps {
                        cleanWs()
                        copyArtifacts(projectName: 'lcb-lnx-scripted-build-pipeline', selector: upstream(), filter: 'libcouchbase-*stretch*.tar')
                        sh('mkdir -p repo/debian9/conf')
                        writeFile(file: "repo/debian9/conf/distributions", text: """
Origin: couchbase
SignWith: ${GPG_NAME}
Suite: stretch
Codename: stretch
Version: debian9
Components: stretch/main
Architectures: amd64 i386
Description: libcouchbase package repository for stretch debian9
""")
                        sh("for p in libcouchbase-*.tar; do tar xf \$p; done")
                        dir('repo') {
                            sh("gpg --export --armor ${GPG_NAME} > couchbase.key")
                            writeFile(file: 'libcouchbase-debian9.list', text: """
# curl https://sdk-snapshots.couchbase.com/libcouchbase/repo/couchbase.key | sudo apt-key add -
deb https://sdk-snapshots.couchbase.com/libcouchbase/repo/debian9 stretch stretch/main
""")
                        }
                        sh("for p in \$(find . -name '*.changes'); do reprepro -T deb --ignore=wrongdistribution -b repo/debian9 include stretch \$p; done")
                        sh("tar cf repo-${BUILD_NUMBER}-debian9.tar repo")
                        archiveArtifacts(artifacts: "repo-${BUILD_NUMBER}-debian9.tar", fingerprint: true)
                        s3Upload(
                            profileName: 'sdk-jenkins-docs',
                            consoleLogLevel: 'INFO',
                            dontWaitForConcurrentBuildCompletion: false,
                            pluginFailureResultConstraint: 'FAILURE',
                            userMetadata: [],
                            entries: [[
                                selectedRegion: 'us-east-1',
                                bucket: "sdk-snapshots.couchbase.com/libcouchbase",
                                sourceFile: 'repo/'
                            ]]
                        )
                    }
                }

                stage(ubuntu1604) {

                    agent { label 'debian10-signing' }
                    steps {
                        cleanWs()
                        copyArtifacts(projectName: 'lcb-lnx-scripted-build-pipeline', selector: upstream(), filter: 'libcouchbase-*xenial*.tar')
                        sh('mkdir -p repo/ubuntu1604/conf')
                        writeFile(file: "repo/ubuntu1604/conf/distributions", text: """
Origin: couchbase
SignWith: ${GPG_NAME}
Suite: xenial
Codename: xenial
Version: ubuntu1604
Components: xenial/main
Architectures: amd64 i386
Description: libcouchbase package repository for xenial ubuntu1604
""")
                        sh("for p in libcouchbase-*.tar; do tar xf \$p; done")
                        dir('repo') {
                            sh("gpg --export --armor ${GPG_NAME} > couchbase.key")
                            writeFile(file: 'libcouchbase-ubuntu1604.list', text: """
# curl https://sdk-snapshots.couchbase.com/libcouchbase/repo/couchbase.key | sudo apt-key add -
deb https://sdk-snapshots.couchbase.com/libcouchbase/repo/ubuntu1604 xenial xenial/main
""")
                        }
                        sh("for p in \$(find . -name '*.changes'); do reprepro -T deb --ignore=wrongdistribution -b repo/ubuntu1604 include xenial \$p; done")
                        sh("tar cf repo-${BUILD_NUMBER}-ubuntu1604.tar repo")
                        archiveArtifacts(artifacts: "repo-${BUILD_NUMBER}-ubuntu1604.tar", fingerprint: true)
                        s3Upload(
                            profileName: 'sdk-jenkins-docs',
                            consoleLogLevel: 'INFO',
                            dontWaitForConcurrentBuildCompletion: false,
                            pluginFailureResultConstraint: 'FAILURE',
                            userMetadata: [],
                            entries: [[
                                selectedRegion: 'us-east-1',
                                bucket: "sdk-snapshots.couchbase.com/libcouchbase",
                                sourceFile: 'repo/'
                            ]]
                        )
                    }
                }

            }
        }
    }
}
